#pragma kernel Cull

RWStructuredBuffer<float3> Positions;
RWStructuredBuffer<uint> States;
float4x4 CameraViewProjection;
float4 CameraPosition;
float3 MeshBounds;

float SCREEN_ALLOWED_SIZE;
float Z_ALLOWED_SIZE;

float3 WorldToScreenPosition(float4 position)
{
    float4 viewSpace = mul(CameraViewProjection, (position - CameraPosition));
    float3 clipSpace = viewSpace.xyz;
    clipSpace /= -viewSpace.w;
    clipSpace = float3(clipSpace.xy, -viewSpace.w);
    return clipSpace;
}

bool IsOnView(float4 position)
{
    float3 screenPosition = WorldToScreenPosition(position);
    return screenPosition.x < SCREEN_ALLOWED_SIZE &&
        screenPosition.x > -SCREEN_ALLOWED_SIZE &&
        screenPosition.z > Z_ALLOWED_SIZE;
}

[numthreads(64, 1, 1)]
void Cull(uint3 id : SV_DispatchThreadID)
{   
    int ID = id.x;
    float4 lowerPosition = float4(Positions[ID] - MeshBounds / 2, 0);
    float4 higherPosition = float4(Positions[ID] + MeshBounds / 2, 0);
    States[ID] = IsOnView(lowerPosition) && IsOnView(higherPosition)  ? 1 : 0; 
}


